version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@0.0.2
workflows:
  build-and-deploy:
    jobs:
      - aws-ecr/build_and_push_image:
          account-url: "953709933230.dkr.ecr.us-west-2.amazonaws.com"
          repo: "BE101"
          region: "us-west-2"
          tag: "latest"

#version: 2.1
#jobs: # a collection of steps
#  orbs:
#    aws-cli: circleci/aws-cli@0.1.20
#  build: # runs not using Workflows must have a `build` job as entry point
#
#    working_directory: ~/be101 # directory where steps will run
#
#    docker: # run the steps with Docker
#      - image: circleci/openjdk:8-jdk-stretch # ...with this image as the primary container; this is where all `steps` will run
#
#    steps: # a collection of executable commands
#      - setup_remote_docker
#
#      - checkout # check out source code to working directory
#
#      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
#          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
#          key: circleci-be101-{{ checksum "pom.xml" }}
#
#      - run: mvn dependency:go-offline # gets the project dependencies
#
#      - save_cache: # saves the project dependencies
#          paths:
#            - ~/.m2
#          key: circleci-be101-{{ checksum "pom.xml" }}
#
#      - run: mvn package # run the actual tests
#      - run: docker image build -t 953709933230.dkr.ecr.us-west-2.amazonaws.com/codersuk-restapi . # Docker builds the image
##      - run:
##          name: Install PIP
##          command: sudo apt-get install python3-pip python
#      - run:
#          name: Install awscli
#          command: sudo pip install awscli
#      - run: aws ecr get-login-password | docker login --username AWS --password-stdin 953709933230.dkr.ecr.us-west-2.amazonaws.com
#      - run: docker push 953709933230.dkr.ecr.us-west-2.amazonaws.com/codersuk-restapi
#
##      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
##          # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
##          path: target/surefire-reports
##
##      - store_artifacts: # store the uberjar as an artifact
##          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
##          path: target/demo-java-spring-0.0.1-SNAPSHOT.jar
##      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples